{"version":3,"sources":["pages/Admin/Dashboard/components/TotalUsers/TotalUsers.js","pages/Admin/Dashboard/components/TotalCinemas/TotalCinemas.js","pages/Admin/Dashboard/components/TotalMovies/TotalMovies.js","pages/Admin/Dashboard/components/TotalReservations/TotalReservations.js","theme/palette.js","pages/Admin/Dashboard/components/BestMovies/chart.js","pages/Admin/Dashboard/components/BestMovies/BestMovies.js","pages/Admin/Dashboard/components/UsersByDevice/UsersByDevice.js","pages/Admin/Dashboard/Dashboard.js"],"names":["useStyles","makeStyles","theme","root","height","content","alignItems","display","title","fontWeight","avatar","backgroundColor","palette","success","main","width","icon","difference","marginTop","spacing","differenceIcon","color","dark","differenceValue","marginRight","TotalUsers","props","className","users","classes","React","createElement","Card","classnames","CardContent","Grid","container","justify","item","Typography","gutterBottom","variant","Avatar","PeopleIcon","ArrowUpwardIcon","caption","error","TotalCinemas","cinemas","TheatersIcon","ArrowDownwardIcon","TotalMovies","movies","primary","contrastText","white","TotalReservations","reservations","EventIcon","type","common","black","commonBackground","neutral","muted","default","light","logoBg","border","secondary","green","info","blue","warning","yellow","danger","red","text","blueGrey","link","background","paper","divider","oxfordBlue","prussianBlue","darkCerulean","pewterBlue","isabelline","options","responsive","maintainAspectRatio","animation","legend","cornerRadius","tooltips","enabled","mode","intersect","borderWidth","borderColor","titleFontColor","bodyFontColor","footerFontColor","layout","padding","scales","xAxes","barThickness","maxBarThickness","barPercentage","categoryPercentage","ticks","fontColor","gridLines","drawBorder","yAxes","beginAtZero","min","borderDash","borderDashOffset","zeroLineBorderDash","zeroLineBorderDashOffset","zeroLineColor","chartContainer","position","actions","justifyContent","BestMovies","bestMovies","data","labels","map","movie","toUpperCase","datasets","label","count","CardHeader","action","Button","size","ArrowDropDownIcon","Divider","Bar","CardActions","ArrowRightIcon","stats","device","textAlign","deviceIcon","UsersByDevice","rest","useTheme","hoverBorderColor","cutoutPercentage","devices","value","LaptopMacIcon","TabletMacIcon","PhoneIphoneIcon","Object","assign","IconButton","RefreshIcon","Doughnut","key","style","Dashboard","Component","constructor","arguments","getBestMovies","total","length","undefined","reservationCounter","reservation","movieId","filter","r","result","Map","has","set","push","sort","a","b","slice","res","find","_id","componentDidMount","this","getUsers","getCinemas","getMovies","getReservations","render","lg","sm","xl","xs","md","mapDispatchToProps","connect","_ref","userState","cinemaState","movieState","reservationState","withStyles"],"mappings":"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","file":"static/js/28.104fb009.chunk.js","sourcesContent":["import React from 'react';\r\nimport classnames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Card, CardContent, Grid, Typography, Avatar } from '@material-ui/core';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport PeopleIcon from '@material-ui/icons/PeopleOutlined';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  content: {\r\n    alignItems: 'center',\r\n    display: 'flex'\r\n  },\r\n  title: {\r\n    fontWeight: 700\r\n  },\r\n  avatar: {\r\n    backgroundColor: theme.palette.success.main,\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  icon: {\r\n    height: 32,\r\n    width: 32\r\n  },\r\n  difference: {\r\n    marginTop: theme.spacing(2),\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  differenceIcon: {\r\n    color: theme.palette.success.dark\r\n  },\r\n  differenceValue: {\r\n    color: theme.palette.success.dark,\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst TotalUsers = props => {\r\n  const { className, users } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classnames(classes.root, className)}>\r\n      <CardContent>\r\n        <Grid container justify=\"space-between\">\r\n          <Grid item>\r\n            <Typography\r\n              className={classes.title}\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              variant=\"body2\">\r\n              TOTAL USERS\r\n            </Typography>\r\n            <Typography variant=\"h3\">{users}</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <PeopleIcon className={classes.icon} />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n        <div className={classes.difference}>\r\n          <ArrowUpwardIcon className={classes.differenceIcon} />\r\n          <Typography className={classes.differenceValue} variant=\"body2\">\r\n            16%\r\n          </Typography>\r\n          <Typography className={classes.caption} variant=\"caption\">\r\n            Since last month\r\n          </Typography>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTotalUsers.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TotalUsers;\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Card, CardContent, Grid, Typography, Avatar } from '@material-ui/core';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport TheatersIcon from '@material-ui/icons/Theaters';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  content: {\r\n    alignItems: 'center',\r\n    display: 'flex'\r\n  },\r\n  title: {\r\n    fontWeight: 700\r\n  },\r\n  avatar: {\r\n    backgroundColor: theme.palette.error.main,\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  icon: {\r\n    height: 32,\r\n    width: 32\r\n  },\r\n  difference: {\r\n    marginTop: theme.spacing(2),\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  differenceIcon: {\r\n    color: theme.palette.error.dark\r\n  },\r\n  differenceValue: {\r\n    color: theme.palette.error.dark,\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst TotalCinemas = props => {\r\n  const { className, cinemas } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classnames(classes.root, className)}>\r\n      <CardContent>\r\n        <Grid container justify=\"space-between\">\r\n          <Grid item>\r\n            <Typography\r\n              className={classes.title}\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              variant=\"body2\">\r\n              TOTAL CINEMAS\r\n            </Typography>\r\n            <Typography variant=\"h3\">{cinemas}</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <TheatersIcon className={classes.icon} />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n        <div className={classes.difference}>\r\n          <ArrowDownwardIcon className={classes.differenceIcon} />\r\n          <Typography className={classes.differenceValue} variant=\"body2\">\r\n            16%\r\n          </Typography>\r\n          <Typography className={classes.caption} variant=\"caption\">\r\n            Since last month\r\n          </Typography>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTotalCinemas.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TotalCinemas;\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Card, CardContent, Grid, Typography, Avatar } from '@material-ui/core';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport TheatersIcon from '@material-ui/icons/Theaters';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  content: {\r\n    alignItems: 'center',\r\n    display: 'flex'\r\n  },\r\n  title: {\r\n    fontWeight: 700\r\n  },\r\n  avatar: {\r\n    backgroundColor: theme.palette.error.main,\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  icon: {\r\n    height: 32,\r\n    width: 32\r\n  },\r\n  difference: {\r\n    marginTop: theme.spacing(2),\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  differenceIcon: {\r\n    color: theme.palette.error.dark\r\n  },\r\n  differenceValue: {\r\n    color: theme.palette.error.dark,\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst TotalMovies = props => {\r\n  const { className, movies } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classnames(classes.root, className)}>\r\n      <CardContent>\r\n        <Grid container justify=\"space-between\">\r\n          <Grid item>\r\n            <Typography\r\n              className={classes.title}\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              variant=\"body2\">\r\n              TOTAL MOVIES\r\n            </Typography>\r\n            <Typography variant=\"h3\">{movies}</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <TheatersIcon className={classes.icon} />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n        <div className={classes.difference}>\r\n          <ArrowDownwardIcon className={classes.differenceIcon} />\r\n          <Typography className={classes.differenceValue} variant=\"body2\">\r\n            16%\r\n          </Typography>\r\n          <Typography className={classes.caption} variant=\"caption\">\r\n            Since last month\r\n          </Typography>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTotalMovies.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TotalMovies;\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Card, CardContent, Grid, Typography, Avatar } from '@material-ui/core';\r\nimport EventIcon from '@material-ui/icons/Event';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100%',\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: theme.palette.primary.contrastText\r\n  },\r\n  content: {\r\n    alignItems: 'center',\r\n    display: 'flex'\r\n  },\r\n  title: {\r\n    fontWeight: 700\r\n  },\r\n  avatar: {\r\n    backgroundColor: theme.palette.white,\r\n    color: theme.palette.primary.main,\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  icon: {\r\n    height: 32,\r\n    width: 32\r\n  }\r\n}));\r\n\r\nconst TotalReservations = props => {\r\n  const { className, reservations } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classnames(classes.root, className)}>\r\n      <CardContent>\r\n        <Grid container justify=\"space-between\">\r\n          <Grid item>\r\n            <Typography\r\n              className={classes.title}\r\n              color=\"inherit\"\r\n              gutterBottom\r\n              variant=\"body2\">\r\n              TOTAL RESERVATIONS\r\n            </Typography>\r\n            <Typography color=\"inherit\" variant=\"h3\">\r\n              {reservations}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <EventIcon className={classes.icon} />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTotalReservations.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TotalReservations;\r\n","import { red, blue, blueGrey, yellow, green } from '@material-ui/core/colors';\r\nconst white = '#FFF';\r\nconst black = '#000';\r\n\r\nexport default {\r\n  type: 'light',\r\n  common: {\r\n    black,\r\n    white,\r\n    commonBackground: white,\r\n    contrastText: black,\r\n    neutral: '#E4E7EB',\r\n    muted: '#9EA0A4'\r\n  },\r\n  default: {\r\n    light: 'rgba(41, 150, 243, .1)',\r\n    main: 'rgba(0, 40, 73, .9)',\r\n    dark: 'rgb(0, 40, 73)',\r\n    logoBg: 'rgb(51, 51, 51)',\r\n    border: 'rgba(0, 40, 73, .1)',\r\n    contrastText: white\r\n  },\r\n  primary: {\r\n    contrastText: white,\r\n    main: '#0767DB',\r\n    light: '#F6F9FD',\r\n    dark: '#0B48A0'\r\n  },\r\n  secondary: {\r\n    contrastText: white,\r\n    main: '#7d58ff',\r\n    light: '',\r\n    dark: '#37248F'\r\n  },\r\n  success: {\r\n    light: green[300],\r\n    main: green[500],\r\n    dark: green[700],\r\n    contrastText: white\r\n  },\r\n  info: {\r\n    light: blue[300],\r\n    main: blue[500],\r\n    dark: blue[700],\r\n    contrastText: white\r\n  },\r\n  warning: {\r\n    light: yellow[300],\r\n    main: yellow[500],\r\n    dark: yellow[700],\r\n    contrastText: white\r\n  },\r\n  danger: {\r\n    light: red[300],\r\n    main: red[500],\r\n    dark: red[700],\r\n    contrastText: white\r\n  },\r\n  text: {\r\n    primary: blueGrey[900],\r\n    secondary: blueGrey[600],\r\n    link: blue[600]\r\n  },\r\n  background: {\r\n    default: '#f8fafc',\r\n    dark: 'rgb(26, 26, 26)',\r\n    paper: white\r\n  },\r\n  border: '#DFE3E8',\r\n  divider: '#DFE3E8',\r\n  oxfordBlue: 'rgba(5, 41, 73, 1)',\r\n  prussianBlue: 'rgba(19, 49, 92, 1)',\r\n  darkCerulean: 'rgba(19, 64, 116, 1)',\r\n  pewterBlue: 'rgba(141, 169, 196, 1)',\r\n  isabelline: 'rgba(238, 244, 237, 1)'\r\n};\r\n","import palette from '../../../../../theme/palette';\r\n\r\nexport const data = {\r\n  labels: ['1 Aug', '2 Aug', '3 Aug', '4 Aug', '5 Aug', '6 Aug'],\r\n  datasets: [\r\n    {\r\n      label: 'This year',\r\n      backgroundColor: palette.primary.main,\r\n      data: [18, 5, 19, 27, 29, 19, 20]\r\n    },\r\n    {\r\n      label: 'Last year',\r\n      backgroundColor: palette.neutral,\r\n      data: [11, 20, 12, 29, 30, 25, 13]\r\n    }\r\n  ]\r\n};\r\n\r\nexport const options = {\r\n  responsive: true,\r\n  maintainAspectRatio: false,\r\n  animation: false,\r\n  legend: { display: false },\r\n  cornerRadius: 20,\r\n  tooltips: {\r\n    enabled: true,\r\n    mode: 'index',\r\n    intersect: false,\r\n    borderWidth: 1,\r\n    borderColor: palette.divider,\r\n    backgroundColor: palette.white,\r\n    titleFontColor: palette.text.primary,\r\n    bodyFontColor: palette.text.secondary,\r\n    footerFontColor: palette.text.secondary\r\n  },\r\n  layout: { padding: 0 },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        barThickness: 12,\r\n        maxBarThickness: 10,\r\n        barPercentage: 0.5,\r\n        categoryPercentage: 0.5,\r\n        ticks: {\r\n          fontColor: palette.text.secondary\r\n        },\r\n        gridLines: {\r\n          display: false,\r\n          drawBorder: false\r\n        }\r\n      }\r\n    ],\r\n    yAxes: [\r\n      {\r\n        ticks: {\r\n          fontColor: palette.text.secondary,\r\n          beginAtZero: true,\r\n          min: 0\r\n        },\r\n        gridLines: {\r\n          borderDash: [2],\r\n          borderDashOffset: [2],\r\n          color: palette.divider,\r\n          drawBorder: false,\r\n          zeroLineBorderDash: [2],\r\n          zeroLineBorderDashOffset: [2],\r\n          zeroLineColor: palette.divider\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Button\r\n} from '@material-ui/core';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\nimport palette from '../../../../../theme/palette';\r\nimport { options } from './chart';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  chartContainer: {\r\n    height: 400,\r\n    position: 'relative'\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst BestMovies = props => {\r\n  const { className, bestMovies } = props;\r\n  const classes = useStyles();\r\n\r\n  const data = {\r\n    labels: bestMovies.map(movie => movie.movie.title.toUpperCase()),\r\n    datasets: [\r\n      {\r\n        label: 'This year',\r\n        backgroundColor: palette.primary.main,\r\n        data: bestMovies.map(movie => movie.count)\r\n      },\r\n      {\r\n        label: 'Last year',\r\n        backgroundColor: palette.neutral,\r\n        data: [11, 20, 12, 29, 30]\r\n      }\r\n    ]\r\n  };\r\n\r\n  return (\r\n    <Card className={classnames(classes.root, className)}>\r\n      <CardHeader\r\n        action={\r\n          <Button size=\"small\" variant=\"text\">\r\n            Best 5<ArrowDropDownIcon />\r\n          </Button>\r\n        }\r\n        title=\"Best Movies\"\r\n      />\r\n      <Divider />\r\n      <CardContent>\r\n        <div className={classes.chartContainer}>\r\n          <Bar data={data} options={options} />\r\n        </div>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardActions className={classes.actions}>\r\n        <Button color=\"primary\" size=\"small\" variant=\"text\">\r\n          Overview <ArrowRightIcon />\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nBestMovies.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default BestMovies;\r\n","import React from 'react';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport classnames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, useTheme } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  IconButton,\r\n  Divider,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport TabletMacIcon from '@material-ui/icons/TabletMac';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  chartContainer: {\r\n    position: 'relative',\r\n    height: '300px'\r\n  },\r\n  stats: {\r\n    marginTop: theme.spacing(2),\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  },\r\n  device: {\r\n    textAlign: 'center',\r\n    padding: theme.spacing(1)\r\n  },\r\n  deviceIcon: {\r\n    color: theme.palette.icon\r\n  }\r\n}));\r\n\r\nconst UsersByDevice = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        data: [63, 15, 22],\r\n        backgroundColor: [\r\n          theme.palette.primary.main,\r\n          theme.palette.error.main,\r\n          theme.palette.warning.main\r\n        ],\r\n        borderWidth: 8,\r\n        borderColor: theme.palette.white,\r\n        hoverBorderColor: theme.palette.white\r\n      }\r\n    ],\r\n    labels: ['Desktop', 'Tablet', 'Mobile']\r\n  };\r\n\r\n  const options = {\r\n    legend: {\r\n      display: false\r\n    },\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    animation: false,\r\n    cutoutPercentage: 80,\r\n    layout: { padding: 0 },\r\n    tooltips: {\r\n      enabled: true,\r\n      mode: 'index',\r\n      intersect: false,\r\n      borderWidth: 1,\r\n      borderColor: theme.palette.divider,\r\n      backgroundColor: theme.palette.white,\r\n      titleFontColor: theme.palette.text.primary,\r\n      bodyFontColor: theme.palette.text.secondary,\r\n      footerFontColor: theme.palette.text.secondary\r\n    }\r\n  };\r\n\r\n  const devices = [\r\n    {\r\n      title: 'Desktop',\r\n      value: '63',\r\n      icon: <LaptopMacIcon />,\r\n      color: theme.palette.primary.main\r\n    },\r\n    {\r\n      title: 'Tablet',\r\n      value: '15',\r\n      icon: <TabletMacIcon />,\r\n      color: theme.palette.error.main\r\n    },\r\n    {\r\n      title: 'Mobile',\r\n      value: '23',\r\n      icon: <PhoneIphoneIcon />,\r\n      color: theme.palette.warning.main\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Card {...rest} className={classnames(classes.root, className)}>\r\n      <CardHeader\r\n        action={\r\n          <IconButton size=\"small\">\r\n            <RefreshIcon />\r\n          </IconButton>\r\n        }\r\n        title=\"Users By Device\"\r\n      />\r\n      <Divider />\r\n      <CardContent>\r\n        <div className={classes.chartContainer}>\r\n          <Doughnut data={data} options={options} />\r\n        </div>\r\n        <div className={classes.stats}>\r\n          {devices.map(device => (\r\n            <div className={classes.device} key={device.title}>\r\n              <span className={classes.deviceIcon}>{device.icon}</span>\r\n              <Typography variant=\"body1\">{device.title}</Typography>\r\n              <Typography style={{ color: device.color }} variant=\"h2\">\r\n                {device.value}%\r\n              </Typography>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nUsersByDevice.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default UsersByDevice;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles, Grid } from '@material-ui/core';\r\nimport {\r\n  TotalUsers,\r\n  TotalCinemas,\r\n  TotalMovies,\r\n  TotalReservations,\r\n  BestMovies,\r\n  UsersByDevice\r\n} from './components';\r\nimport {\r\n  getUsers,\r\n  getCinemas,\r\n  getMovies,\r\n  getReservations\r\n} from '../../../store/actions';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    textAlign: 'center',\r\n    padding: theme.spacing(4)\r\n  }\r\n});\r\n\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    this.props.getUsers();\r\n    this.props.getCinemas();\r\n    this.props.getMovies();\r\n    this.props.getReservations();\r\n  }\r\n\r\n  getBestMovies = (reservations, movies, total = 5) => {\r\n    const reservationCounter = reservations.map(reservation => ({\r\n      movieId: reservation.movieId,\r\n      count: reservations.filter(r => r.movieId === reservation.movieId).length\r\n    }));\r\n\r\n    const result = [];\r\n    const map = new Map();\r\n    for (const item of reservationCounter) {\r\n      if (!map.has(item.movieId)) {\r\n        map.set(item.movieId, true); // set any value to Map\r\n        result.push({\r\n          movieId: item.movieId,\r\n          count: item.count\r\n        });\r\n      }\r\n    }\r\n    return result\r\n      .sort((a, b) => b.count - a.count)\r\n      .slice(0, total)\r\n      .map(res => ({\r\n        movie: movies.find(movie => movie._id === res.movieId),\r\n        count: res.count\r\n      }));\r\n  };\r\n\r\n  render() {\r\n    const { classes, users, cinemas, movies, reservations } = this.props;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <Grid container spacing={4}>\r\n          <Grid item lg={3} sm={6} xl={3} xs={12}>\r\n            <TotalUsers users={users.length} />\r\n          </Grid>\r\n          <Grid item lg={3} sm={6} xl={3} xs={12}>\r\n            <TotalCinemas cinemas={cinemas.length} />\r\n          </Grid>\r\n          <Grid item lg={3} sm={6} xl={3} xs={12}>\r\n            <TotalMovies movies={movies.length} />\r\n          </Grid>\r\n          <Grid item lg={3} sm={6} xl={3} xs={12}>\r\n            <TotalReservations reservations={reservations.length} />\r\n          </Grid>\r\n          <Grid item lg={8} md={12} xl={9} xs={12}>\r\n            <BestMovies\r\n              bestMovies={this.getBestMovies(reservations, movies, 5)}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={4} md={6} xl={3} xs={12}>\r\n            <UsersByDevice />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({\r\n  userState,\r\n  cinemaState,\r\n  movieState,\r\n  reservationState\r\n}) => ({\r\n  users: userState.users,\r\n  cinemas: cinemaState.cinemas,\r\n  movies: movieState.movies,\r\n  reservations: reservationState.reservations\r\n});\r\nconst mapDispatchToProps = {\r\n  getUsers,\r\n  getCinemas,\r\n  getMovies,\r\n  getReservations\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles)(Dashboard));\r\n"],"sourceRoot":""}